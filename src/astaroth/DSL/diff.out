diff --git a/src/astaroth/DSL/density/continuity.h b/src/astaroth/DSL/density/continuity.h
index 954bf51e8..a562df938 100644
--- a/src/astaroth/DSL/density/continuity.h
+++ b/src/astaroth/DSL/density/continuity.h
@@ -1,5 +1,10 @@
-rhs=0.
+rhs=0. 
 glnrho = gradient(LNRHO)
 #include "../density/diffusivity.h"
-return rhs - dot(vecvalue(UU), glnrho) - divergence(UU)
+if (ldensity_nolog){
+  return rhs - dot(vecvalue(UU), glnrho) - value(RHO)*divergence(UU)
+}
+else{
+  return rhs - dot(vecvalue(UU), glnrho) - divergence(UU)
+}
 
diff --git a/src/astaroth/DSL/density/diffusivity.h b/src/astaroth/DSL/density/diffusivity.h
index 7af3a5009..ccd14f75f 100644
--- a/src/astaroth/DSL/density/diffusivity.h
+++ b/src/astaroth/DSL/density/diffusivity.h
@@ -1,15 +1,16 @@
 #if LSHOCK
 if (ldiff_shock) {
-/*        if (ldensity_nolog) then
-          call dot_mn(p%gshock,p%grho,tmp)
-          fdiff = fdiff + diffrho_shock * (p%shock * p%del2rho + tmp)
-        else
-          if (ldiffusion_nolog) then
+if (ldensity_nolog){
+          rhs = diffrho_shock * (value(SHOCK) * laplace(RHO) + dot(gradient(SHOCK),glnrho))
+}
+else
+{
+          /*if (ldiffusion_nolog){ 
             call dot_mn(p%gshock,p%grho,tmp)
-            fdiff = fdiff + p%rho1 * diffrho_shock * (p%shock * p%del2rho + tmp)
-	  else
-*/
-            
-            rhs = diffrho_shock * value(SHOCK) * (laplace(LNRHO) + norm2(glnrho) + dot(gradient(SHOCK),glnrho))
+            rhs =  exp(-value(LNRHO))Â * diffrho_shock * (value(SHOCK) * laplace(exp(LNRHO)) + dot(gradient(SHOCK),glnrho))
+	}else*/
+            rhs = diffrho_shock * (value(SHOCK) * (laplace(LNRHO) + norm2(glnrho)) + dot(gradient(SHOCK),glnrho))
+
+}
 }
 #endif
diff --git a/src/astaroth/DSL/entropy/heat_cond_hyper3.h b/src/astaroth/DSL/entropy/heat_cond_hyper3.h
index d29780966..29575a2ba 100644
--- a/src/astaroth/DSL/entropy/heat_cond_hyper3.h
+++ b/src/astaroth/DSL/entropy/heat_cond_hyper3.h
@@ -1,10 +1,19 @@
-
-if (lheatc_hyper3ss) {
+if (lheatc_hyper3ss){
       rhs += chi_hyper3 * del6(SS)
 }
 #if LSHOCK
-if (lheatc_shock) {
+del2lnrho = 0.
+glnTT = real3(0.,0.,0.)
+if (lheatc_shock){
+if (ldensity_nolog){
+glnTT = cv1*gradient(SS)+gamma_m1*gradient(RHO)/value(RHO)
+del2lnrho = laplace(RHO)/value(RHO)-norm2(gradient(RHO))/(value(RHO)*value(RHO))
+}
+else
+{
 glnTT = cv1*gradient(SS)+gamma_m1*gradient(LNRHO)
+del2lnrho = laplace(LNRHO)
+}
 /*  if (pretend_lnTT) then
     thdiff=gamma*chi_shock*(p%shock*(p%del2lnrho+g2)+gshockglnTT)
   else
@@ -14,5 +23,6 @@ glnTT = cv1*gradient(SS)+gamma_m1*gradient(LNRHO)
       thdiff=exp(-onethird*p%lnrho)*chi_shock* &
              (p%shock*(exp(twothird*p%lnrho)*p%del2ss+g2)+gshockgss)
     else*/
-      rhs += chi_shock*value(SHOCK) * (cv1*del2(SS) + gamma_m1*del2(LNRHO) + dot(glnrho+glnTT,glnTT) + dot(gradient(SHOCK),glnTT))
+      rhs += chi_shock*value(SHOCK) * (cv1*laplace(SS) + gamma_m1*del2lnrho + dot(glnrho+glnTT,glnTT) + dot(gradient(SHOCK),glnTT))
+}
 #endif
diff --git a/src/astaroth/DSL/entropy/heat_ss.h b/src/astaroth/DSL/entropy/heat_ss.h
index 1f6fdd733..4f8f16682 100644
--- a/src/astaroth/DSL/entropy/heat_ss.h
+++ b/src/astaroth/DSL/entropy/heat_ss.h
@@ -1,9 +1,22 @@
+rhs = 0.
+rho1 = 0.
+lnrho = 0.
+glnrho = real3(0.,0.,0.)
+if (ldensity_nolog){
+    lnrho = log(value(RHO))
+    rho1 =  1./value(RHO)
+    glnrho = gradient(RHO)/value(RHO)
+}
+else
+{
     lnrho = value(LNRHO)
-    rho1 = 1. / exp(-lnrho)
-    cv1 = 1. /cv
+    rho1 =  exp(-lnrho)
+    glnrho = gradient(LNRHO)
+}
+    cv1 = 1./cv
     lnTT = lnTT0+cv1*value(SS)+gamma_m1*(lnrho-lnrho0)
 
-    rhs =  2. * nu * contract(stress_tensor(UU))
+    rhs +=  2. * nu * contract(stress_tensor(UU))
           + zeta * divergence(UU) * divergence(UU)
 
 #if LMAGNETIC
@@ -17,4 +30,5 @@
 #endif
 
     rhs *= exp(-lnTT)
-    return -dot(vecvalue(UU), gradient(SS)) + rhs + heat_conduction(step_num)
+    #include "../entropy/heat_cond_hyper3.h"
+    return -dot(vecvalue(UU), gradient(SS)) + rhs //+ heat_conduction(step_num)
diff --git a/src/astaroth/DSL/hydro/momentum.h b/src/astaroth/DSL/hydro/momentum.h
index 02014273b..693968734 100644
--- a/src/astaroth/DSL/hydro/momentum.h
+++ b/src/astaroth/DSL/hydro/momentum.h
@@ -1,18 +1,26 @@
+//if (ldensity_nolog) {
+        rho1 = 1/value(RHO)
+        glnrho = rho1*gradient(RHO)
+        lnrho = log(value(RHO))
+/*}
+else {
+        rho1 = exp(-value(LNRHO))
+        glnrho = gradient(LNRHO)
+        lnrho = value(LNRHO)
+}*/
 #if LMAGNETIC
     jj =  (gradient_of_divergence(AA) - veclaplace(AA))/mu0
-    rho1 = exp(-value(LNRHO))
     bb = curl(AA)
-    advec2 = dot(bb,bb)*rho1/mu0
+    advec2 = norm2(bb)*rho1/mu0
 #else
     advec2 = 0.
 #endif
 #if LENTROPY
-    cs2 = cs20 * exp(gamma * value(SS)/cp + gamma_m1 * (value(LNRHO) - lnrho0))
+    cs2 = cs20 * exp(gamma * value(SS)/cp + gamma_m1 * (lnrho - lnrho0))
     advec2 = advec2 + cs2
 #endif
     uu=vecvalue(UU)
     reduce_max(step_num==0, abs(uu.x/AC_dsx+uu.y/AC_dsy+uu.z/AC_dsz) + sqrt(advec2)/AC_dsx, AC_maxadvec)
-    glnrho = gradient(LNRHO)
     rhs=real3(0.,0.,0.)
 #if LVISCOSITY
 #include "../hydro/viscosity.h"
diff --git a/src/astaroth/DSL/hydro/viscosity.h b/src/astaroth/DSL/hydro/viscosity.h
index 68559e069..f63fcdf9e 100644
--- a/src/astaroth/DSL/hydro/viscosity.h
+++ b/src/astaroth/DSL/hydro/viscosity.h
@@ -1,12 +1,12 @@
 if (lvisc_nu_const) {  
    rhs += nu * (veclaplace(UU) + (1./3.) * gradient_of_divergence(UU) + 2. * stress_tensor(UU) * glnrho)
    + zeta * gradient_of_divergence(UU)
-   }
+}
 if (lvisc_hyper3_nu_const) { 
    rhs += nu_hyper3 * (del6v(UU) + u_dot_grad_vec(gij5(UU),glnrho))
-		   }
+}
 #if LSHOCK
 if (lvisc_nu_shock) {
    rhs += nu_shock *  value(SHOCK) * ( divergence(UU) * glnrho + gradient_of_divergence(UU))
-	}
+}
 #endif
diff --git a/src/astaroth/DSL/prerequisites.h b/src/astaroth/DSL/prerequisites.h
index e0acb5572..146f3a961 100644
--- a/src/astaroth/DSL/prerequisites.h
+++ b/src/astaroth/DSL/prerequisites.h
@@ -26,6 +26,8 @@ output real AC_maxchi
   #include "../forcing/pcstyleforcing.h"
 #endif
 #ifdef LDENSITY
+  int AC_ldensity_nolog
   #define LNRHO RHO
+  #define ldensity_nolog AC_ldensity_nolog
 #endif
 #include "equations.h"
